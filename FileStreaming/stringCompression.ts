import { compressToUTF16, decompressFromUTF16 } from 'async-lz-string';
//
const lrgString =
  '1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373,1407,1411,1431,1397,1392,1385,1359,1342,1323,1297,1307,1295,1280,1285,1280,1295,1300,1328,1356,1359,1373';

async function compress(str: string): Promise<string> {
  return await compressToUTF16(str);
}

async function decompress(str: string): Promise<string> {
  return await decompressFromUTF16(str);
}

const doShiz = async () => {
  console.log('$$$$$ - Default String - $$$$$$');
  /////
  console.log('lrgString length: ', lrgString.length);
  console.log(JSON.stringify(lrgString).length * 8 * 0.000001);
  let largeString = await compress(lrgString);
  /////
  console.log('$$$$$ - Large Compressed String - $$$$$$');
  console.log('Large String length: ', largeString.length);
  console.log(JSON.stringify(largeString).length * 8 * 0.000001);
  /////
  console.log('$$$$$ - Large DeCompressed String - $$$$$$');
  let decompressedLgString = await decompress(largeString);
  console.log('decompressedLgString length: ', decompressedLgString.length);
  console.log(JSON.stringify(decompressedLgString).length * 8 * 0.000001);
};

doShiz();
